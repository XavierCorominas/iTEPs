%% Preprocessing pipeline for ITEPS conserving TMS pulse and emplying detrending

%Pipeline:
% 1. Add paths
% 2. Load data
% 3. Epoch
% 4. Baseline correction
% 5. Robust detrend
% 6. Re-epoch
% 7. Re-Baseline correction
% 8. Reject bad trials and channels
% 9. Gauss window smooth
% 10. Save 

%% 1. Add paths 
clear all;
close all;
clc


% Path to eeglab
addpath('.../eeglab2025.0.0/')

%Path to Robust Detrend
addpath('.../functions/robust_detrend/')

%Path to Gauss window smooth
addpath('/functions/gauss_temporal_filter/')

%% 2. Load data
% Open EEGlab 
eeglab;

% Define file to load 
name_dataset = 'example.vhdr';
save_name = 'example';
path_dataset = 'example_path/';
path_save = 'example_path/'

% Load file
EEG = pop_loadbv(path_dataset, name_dataset);

eeglab redraw
%% 3. Epoch
% Epoch 
EEG = pop_epoch( EEG, {'R  8'}, [-1 1.5]); % Modify your marker if necessary for epoching.
eeglab redraw

% Plot data with scalp maps
figure; pop_timtopo(EEG, [-2 20], [-200 0 100 200 300 400], 'After First Epoching');

% Figure for paper
figure;
plot(EEG.times, mean(EEG.data, 3)', 'b'); 
xlim([-500 499]); ylim([-100 100])
% Set font size and font name for all axis labels and ticks
set(gca, 'FontSize', 24, 'FontName', 'Arial');
% Add axis labels and title 
xlabel('Time (ms)', 'FontSize', 24, 'FontName', 'Arial');
ylabel('Amplitude (µV)', 'FontSize', 24, 'FontName', 'Arial');
title('EEG Signal After First Epoching', 'FontSize', 24, 'FontName', 'Arial');


%% 4. Baseline Correction
EEG = pop_rmbase( EEG, [-210 -10] ,[]);

% Plot data with scalp maps
figure; pop_timtopo(EEG, [-500 499], [-200 0 100 200 300 400], 'After Baseline First Correction');

% Figure for paper
figure;
plot(EEG.times, mean(EEG.data, 3)', 'b'); 
xlim([-500 499]); ylim([-100 100])
% Set font size and font name for all axis labels and ticks
set(gca, 'FontSize', 24, 'FontName', 'Arial');
% Add axis labels and title
xlabel('Time (ms)', 'FontSize', 24, 'FontName', 'Arial');
ylabel('Amplitude (µV)', 'FontSize', 24, 'FontName', 'Arial');
title('EEG Signal After Baseline First Correction', 'FontSize', 24, 'FontName', 'Arial');
%% 5. Robust Detrend
tic
polynomial_order = 3;
warning('off') % disable warnings 

EEG.data = double(EEG.data);
EEG =  robust_detrend_EEG(EEG, polynomial_order);
warning('on')

elapsedTime = toc; 
fprintf('Robust Detrend Done in : %.6f min\n', elapsedTime./60); %(in min)

% Plot data with scalp maps
figure; pop_timtopo(EEG, [-500 499], [-200 0 100 200 300 400], 'After Robust Detrend');

% Figure for paper
figure;
plot(EEG.times, mean(EEG.data, 3)', 'b'); 
xlim([-500 499]); ylim([-100 100])
% Set font size and font name for all axis labels and ticks
set(gca, 'FontSize', 24, 'FontName', 'Arial');
% Add axis labels and title
xlabel('Time (ms)', 'FontSize', 24, 'FontName', 'Arial');
ylabel('Amplitude (µV)', 'FontSize', 24, 'FontName', 'Arial');
title('EEG Signal After Robust Detrend', 'FontSize', 24, 'FontName', 'Arial');

%% 6. Re-Epoching

% Epoch 
EEG = pop_epoch( EEG, {  'R  8'  }, [-0.5 0.5]); % Modify your marker if necessary for epoching.
eeglab redraw

% Plot data with scalp maps
figure; pop_timtopo(EEG, [-500 499], [-200 0 100 200 300 400], 'After Re-Epoching');

% Figure for paper
figure;
plot(EEG.times, mean(EEG.data, 3)', 'b'); 
xlim([-500 499]); ylim([-100 100])
% Set font size and font name for all axis labels and ticks
set(gca, 'FontSize', 24, 'FontName', 'Arial');
% Add axis labels and title 
xlabel('Time (ms)', 'FontSize', 24, 'FontName', 'Arial');
ylabel('Amplitude (µV)', 'FontSize', 24, 'FontName', 'Arial');
title('EEG Signal After Re-Epoching', 'FontSize', 24, 'FontName', 'Arial');


%% 7. Re-Baseline Correction
EEG = pop_rmbase( EEG, [-210 -10] ,[]);

% Plot data with scalp maps
figure; pop_timtopo(EEG, [-500 499], [-200 0 100 200 300 400], 'After Re-Baseline Correction');

% Figure for paper
figure;
plot(EEG.times, mean(EEG.data, 3)', 'b'); 
xlim([-500 499]); ylim([-100 100])
% Set font size and font name for all axis labels and ticks
set(gca, 'FontSize', 24, 'FontName', 'Arial');
% Add axis labels and title
xlabel('Time (ms)', 'FontSize', 24, 'FontName', 'Arial');
ylabel('Amplitude (µV)', 'FontSize', 24, 'FontName', 'Arial');
title('EEG Signal After Re-Baseline Correction', 'FontSize', 24, 'FontName', 'Arial');

%% 8. Remove bad trials
%% 8a. Select bad trials 

TMPREJ=[];
eegplot(EEG.data,'winlength',5,'command','pippo','srate',EEG.srate,'limits',[EEG.times(1) EEG.times(end)]);
'data have been displayed for first round of trials rejection'

%% 8b. Remove bad trials 

if ~isempty(TMPREJ)
    [trialrej elecrej]=eegplot2trial(TMPREJ,size(EEG.data,2),size(EEG.data,3));
else
    trialrej=[];
end

EEG.BadTr =find(trialrej==1);
EEG = pop_rejepoch( EEG, EEG.BadTr ,0); 

eeglab redraw

% Plot data with scalp maps
figure; pop_timtopo(EEG, [-500 499], [-200 0 100 200 300 400], 'After removal of bad trials');

% Figure for paper
figure;
plot(EEG.times, mean(EEG.data, 3)', 'b'); 
xlim([-500 499]); ylim([-100 100])
% Set font size and font name for all axis labels and ticks
set(gca, 'FontSize', 24, 'FontName', 'Arial');
% Add axis labels and title
xlabel('Time (ms)', 'FontSize', 24, 'FontName', 'Arial');
ylabel('Amplitude (µV)', 'FontSize', 24, 'FontName', 'Arial');
title('EEG Signal After removal of bad trails', 'FontSize', 24, 'FontName', 'Arial');

%% 9. Gauss window smooth
GaussSmooth; 

% Plot data with scalp maps
figure; pop_timtopo(EEG, [-500 499], [-200 0 100 200 300 400], 'After Gauss Smooth','limits');

% Figure for paper - all channels
figure;
plot(EEG.times, mean(EEG.data, 3)', 'b'); 
xlim([-500 499]); ylim([-100 100])
% Set font size and font name for all axis labels and ticks
set(gca, 'FontSize', 24, 'FontName', 'Arial');
% Add axis labels and title
xlabel('Time (ms)', 'FontSize', 24, 'FontName', 'Arial');
ylabel('Amplitude (µV)', 'FontSize', 24, 'FontName', 'Arial');
title('EEG Signal After Gauss Smooth', 'FontSize', 24, 'FontName', 'Arial');


% Figure for paper single channel
chan=find(strcmp({EEG.chanlocs.labels}, 'C1'));
erp=mean(EEG.data(chan,:,:),3);
figure;
plot(EEG.times, erp, 'b'); 
xlim([-500 499]); ylim([-100 100])
% Set font size and font name for all axis labels and ticks
set(gca, 'FontSize', 24, 'FontName', 'Arial');
% Add axis labels and title
xlabel('Time (ms)', 'FontSize', 24, 'FontName', 'Arial');
ylabel('Amplitude (µV)', 'FontSize', 24, 'FontName', 'Arial');
title(['EEG Signal After Gauss Smooth,' EEG.chanlocs(chan).labels], 'FontSize', 24, 'FontName', 'Arial');


%% 10. Save

EEG = pop_saveset( EEG, 'filename',[save_name,'_clean.set'],'filepath',[path_save]);

%% End
